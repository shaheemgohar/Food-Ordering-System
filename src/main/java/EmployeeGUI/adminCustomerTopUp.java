/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package EmployeeGUI;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DreamDreams
 */
public class adminCustomerTopUp extends javax.swing.JFrame {


    private String userID;
    private String amountAdded;
    private String updatedBalance;
    
    public adminCustomerTopUp() {
        initComponents();
        refreshData();
    }

    
    //refresh and display data in the table
    public void refreshData(){
        try{
        DefaultTableModel model = (DefaultTableModel) customerTopUpTable.getModel();
        model.setRowCount(0);
        
        //reading file
        
        String filename = "employees.txt";
        BufferedReader br = new BufferedReader(new FileReader(filename));
        String line;
        
        while((line = br.readLine())!= null){
            String[] data = line.split(";");
          if(data[5].equals("Customer")){
              
            model.addRow(new Object[]{
                data[0],data[3],data[6]
            });
          }  
        
        }
        
        }catch(IOException e){
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        backbtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        customerTopUpTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        amounttxt = new javax.swing.JTextField();
        addbtn = new javax.swing.JButton();
        generateReciept = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        currentBalancelbl = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        balanceAfterAddinglbl = new javax.swing.JLabel();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jLabel4.setText("jLabel4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Top Up Customer");

        backbtn.setText("Back");
        backbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backbtnActionPerformed(evt);
            }
        });

        customerTopUpTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "UserID", "Name", "Balance"
            }
        ));
        customerTopUpTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                customerTopUpTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(customerTopUpTable);

        jLabel2.setText("Current Balance");

        amounttxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                amounttxtKeyReleased(evt);
            }
        });

        addbtn.setText("Add");
        addbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbtnActionPerformed(evt);
            }
        });

        generateReciept.setText("Generate Receipt");
        generateReciept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateRecieptActionPerformed(evt);
            }
        });

        jLabel3.setText("Amount");

        currentBalancelbl.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        currentBalancelbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        currentBalancelbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabel5.setText("New Balance");

        balanceAfterAddinglbl.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        balanceAfterAddinglbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        balanceAfterAddinglbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addGap(67, 67, 67))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(121, 121, 121)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(95, 95, 95)
                                .addComponent(currentBalancelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(backbtn)
                                .addGap(140, 140, 140)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(amounttxt, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addbtn))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(balanceAfterAddinglbl, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(29, 29, 29))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(84, 84, 84)
                                        .addComponent(generateReciept)
                                        .addGap(0, 83, Short.MAX_VALUE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(backbtn)
                .addGap(44, 44, 44)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel1)
                .addGap(62, 62, 62)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(currentBalancelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(amounttxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(balanceAfterAddinglbl, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addbtn)
                    .addComponent(generateReciept))
                .addGap(123, 123, 123))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void backbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backbtnActionPerformed
        this.dispose();
        new adminHome().setVisible(true);
    }//GEN-LAST:event_backbtnActionPerformed

    private void customerTopUpTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customerTopUpTableMouseClicked
        int SelectedRow = customerTopUpTable.getSelectedRow();
        String amount;
        if(SelectedRow != -1){
            amount = (String) customerTopUpTable.getValueAt(SelectedRow, 2);
            currentBalancelbl.setText(amount);
        }
        
    }//GEN-LAST:event_customerTopUpTableMouseClicked

    private void addbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbtnActionPerformed
        try{
            int amount,sum,currentbalance;
            int SelectedRow = customerTopUpTable.getSelectedRow(), CurrentRow=0;
            String userID = (String) customerTopUpTable.getValueAt(SelectedRow,0);
        //Calculations
            amount = Integer.parseInt(amounttxt.getText());
            currentbalance = Integer.parseInt(currentBalancelbl.getText());
            sum = amount + currentbalance;
            String updatedBalance = String.valueOf(sum);
            
        //writing balance to customerTransHistory for receipt
            FileWriter fw2 =  new FileWriter("customerTransHistory.txt", true);
            fw2.write(
                    userID + ";" + amounttxt.getText() + ";" + updatedBalance  + ";"  + "\n"
            );
            fw2.close();
            
            //passing it on to generateReceipt class for constructor
        this.userID = userID;
        this.amountAdded = amounttxt.getText();
        this.updatedBalance = updatedBalance;
            

        //updating balance in employees.txt
            String filename = "employees.txt";
            BufferedReader br = new BufferedReader(new FileReader(filename));
            StringBuilder filecontent = new StringBuilder();
            String line;
            
            
            
            while((line = br.readLine()) != null){
                String[] data = line.split(";");
            
                if(!(data[0].equals(userID))){
                    filecontent.append(line).append("\n");
                }
                
                if(data[0].equals(userID)){
                    
                    if(data[5].equals("Customer")){
                        
                        data[6] = updatedBalance;
                        String newLine = data[0] + ";" + data[1] + ";" + data[2]+ ";" + data[3] + ";" + data[4] + ";" + data[5] + ";" + data[6] + ";";
                        filecontent.append(newLine).append("\n");
                        
                        }
                }
                
                CurrentRow++;
               
            }
                br.close();
                FileWriter fw = new FileWriter(filename);
                fw.write(filecontent.toString());
                fw.close();
                refreshData();
            
        }catch(IOException e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_addbtnActionPerformed

//responsible for the dynamic nature of new balance field
    private void amounttxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_amounttxtKeyReleased
        int SelectedRow = customerTopUpTable.getSelectedRow();
        if(SelectedRow != -1)
            balanceAfterAdding();
    }//GEN-LAST:event_amounttxtKeyReleased

    private void generateRecieptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateRecieptActionPerformed
        adminGenerateReceipt receipt = new adminGenerateReceipt();
        receipt.setReceiptData(this.userID, this.amountAdded, this.updatedBalance);
        
        receipt.generateReceipt();
        receipt.setVisible(true);
        
    }//GEN-LAST:event_generateRecieptActionPerformed

//dynamically shows the new balance field
    public void  balanceAfterAdding(){
        int amount = 0,sum,currentbalance;
        String line;
            //show updated balance
            //take value from amount (to be added) + the current balance, turn it into string and display it
            //adding try catch so terminal doesn't show error when amount is empty
        try{
            String amountText = amounttxt.getText();
            if(!amountText.isEmpty()){
                amount = Integer.parseInt(amountText);
            }else{
             amount = 0; //if empty treat it as 0   
            }
        }catch(NumberFormatException e){
            currentbalance = 0;
        }
        
        try{
            currentbalance = Integer.parseInt(currentBalancelbl.getText());
        }catch(NumberFormatException e){
            currentbalance = 0;
        }            
            
            sum = amount + currentbalance;
            balanceAfterAddinglbl.setText(String.valueOf(sum)); //or Integer.toString(sum)
    } 
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(adminCustomerTopUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(adminCustomerTopUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(adminCustomerTopUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(adminCustomerTopUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new adminCustomerTopUp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addbtn;
    private javax.swing.JTextField amounttxt;
    private javax.swing.JButton backbtn;
    private javax.swing.JLabel balanceAfterAddinglbl;
    private javax.swing.JLabel currentBalancelbl;
    private javax.swing.JTable customerTopUpTable;
    private javax.swing.JButton generateReciept;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
